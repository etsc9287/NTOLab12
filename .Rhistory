## step one
meandiff <- c(rep(0,perms))
print(meandiff)
# Loop throught number of permutations
for (i in c(1:perms))
{
# Step 2:
z <- c(rep(0,length(values)))
# random genreation of numbers should be defined outside this function.
rand <- sample(values,n1)
for(i in seq_along(values)){
if(isFALSE(values[i] %in% rand)){
z[i] <- values[i]
}}
z <- z[ z != 0 ]
print(rand)
print(z)
# Step 3:
z2 <- mean(z)
z1 <- mean(rand)
a <- z2-z1
meandiff[i] <- a
print(a)
# Step 4:
}
# Step 5:
print(meandiff)
}
perm_mean(2,c(1:10),4)
perm_mean <- function(perms, values, n1)
{
## step one
meandiff <- c(rep(0,perms))
print(meandiff)
# Loop throught number of permutations
for (i in c(1:perms))
{
# Step 2:
z <- c(rep(0,length(values)))
# random genreation of numbers should be defined outside this function.
rand <- sample(values,n1)
for(i in seq_along(values)){
if(isFALSE(values[i] %in% rand)){
z[i] <- values[i]
}}
z <- z[ z != 0 ]
print(rand)
print(z)
# Step 3:
z2 <- mean(z)
z1 <- mean(rand)
a <- z2-z1
meandiff[i] <- i
print(a)
# Step 4:
}
# Step 5:
print(meandiff)
}
perm_mean(2,c(1:10),4)
perm_mean <- function(perms, values, n1)
{
## step one
meandiff <- c(rep(0,perms))
print(meandiff)
# Loop throught number of permutations
for (i in c(1:perms))
{
# Step 2:
z <- c(rep(0,length(values)))
# random genreation of numbers should be defined outside this function.
rand <- sample(values,n1)
for(i in seq_along(values)){
if(isFALSE(values[i] %in% rand)){
z[i] <- values[i]
}}
z <- z[ z != 0 ]
print(rand)
print(z)
# Step 3:
z2 <- mean(z)
z1 <- mean(rand)
a <- z2-z1
print(a)
# Step 4:
}
meandiff[i] <- i
# Step 5:
print(meandiff)
}
perm_mean(2,c(1:10),4)
perm_mean <- function(perms, values, n1)
{
## step one
meandiff <- c(rep(0,perms))
print(meandiff)
# Loop throught number of permutations
for (i in c(1:perms))
{
# Step 2:
z <- c(rep(0,length(values)))
# random genreation of numbers should be defined outside this function.
rand <- sample(values,n1)
for(i in seq_along(values)){
if(isFALSE(values[i] %in% rand)){
z[i] <- values[i]
}
}
z <- z[ z != 0 ]
print(rand)
print(z)
# Step 3:
z2 <- mean(z)
z1 <- mean(rand)
a <- z2-z1
print(a)
meandiff[i] <- i
# Step 4:
}
# Step 5:
print(meandiff)
}
perm_mean(2,c(1:10),4)
perm_mean <- function(perms, values, n1)
{
## step one
meandiff <- c(rep(0,perms))
print(meandiff)
# Loop throught number of permutations
for (i in c(1:perms))
{
# Step 2:
z <- c(rep(0,length(values)))
# random genreation of numbers should be defined outside this function.
rand <- sample(values,n1)
for(i in seq_along(values)){
if(isFALSE(values[i] %in% rand)){
z[i] <- values[i]
}
}
z <- z[ z != 0 ]
print(rand)
print(z)
# Step 3:
z2 <- mean(z)
z1 <- mean(rand)
a <- z2-z1
print(a)
# Step 4:
}
# Step 5:
print(meandiff)
}
perm_mean(2,c(1:10),4)
perm_mean <- function(perms, values, n1)
{
## step one
meandiff <- c(rep(0,perms))
print(meandiff)
# Loop throught number of permutations
for (i in c(1:perms))
{
# Step 2:
z <- c(rep(0,length(values)))
# random genreation of numbers should be defined outside this function.
rand <- sample(values,n1)
for(i in seq_along(values)){
if(isFALSE(values[i] %in% rand)){
z[i] <- values[i]
}
}
z <- z[ z != 0 ]
print(rand)
print(z)
# Step 3:
z2 <- mean(z)
z1 <- mean(rand)
a <- z2-z1
print(a)
# Step 4:
}
# Step 5:
print(meandiff)
}
perm_mean(2,c(1:10),4)
perm_mean <- function(perms, values, n1)
{
## step one
meandiff <- c(0,0)
print(meandiff)
# Loop throught number of permutations
for (i in c(1:perms))
{
# Step 2:
z <- c(rep(0,length(values)))
# random genreation of numbers should be defined outside this function.
rand <- sample(values,n1)
for(i in seq_along(values)){
if(isFALSE(values[i] %in% rand)){
z[i] <- values[i]
}
}
z <- z[ z != 0 ]
print(rand)
print(z)
# Step 3:
z2 <- mean(z)
z1 <- mean(rand)
a <- z2-z1
meandiff[i]<-i
print(a)
# Step 4:
}
# Step 5:
print(meandiff)
}
perm_mean(2,c(1:10),4)
perm_mean <- function(perms, values, n1)
{
## step one
meandiff <- c(0,0)
print(meandiff)
# Loop throught number of permutations
for (i in c(1:perms))
{
# Step 2:
z <- c(rep(0,length(values)))
# random genreation of numbers should be defined outside this function.
rand <- sample(values,n1)
for(i in seq_along(values)){
if(isFALSE(values[i] %in% rand)){
z[i] <- values[i]
}
}
z <- z[ z != 0 ]
print(rand)
print(z)
# Step 3:
z2 <- mean(z)
z1 <- mean(rand)
a <- z2-z1
print(a)
# Step 4:
}
# Step 5:
print(meandiff)
}
perm_mean(2,c(1:10),4)
perm_mean <- function(perms, values, n1)
{
## step one
meandiff <- c(0,0)
print(meandiff)
# Loop throught number of permutations
for (i in c(1:perms))
{
# Step 2:
z <- c(rep(0,length(values)))
# random genreation of numbers should be defined outside this function.
rand <- sample(values,n1)
for(i in seq_along(values)){
if(isFALSE(values[i] %in% rand)){
z[i] <- values[i]
}
}
z <- z[ z != 0 ]
print(rand)
print(z)
# Step 3:
z2 <- mean(z)
z1 <- mean(rand)
a <- z2-z1
meandiff[[i]]<- i
print(a)
# Step 4:
}
# Step 5:
print(meandiff)
}
perm_mean(2,c(1:10),4)
perm_mean <- function(perms, values, n1)
{
## step one
meandiff <- c(0,0)
print(meandiff)
# Loop throught number of permutations
for (i in c(1:perms))
{
# Step 2:
z <- c(rep(0,length(values)))
# random genreation of numbers should be defined outside this function.
rand <- sample(values,n1)
for(i in seq_along(values)){
if(isFALSE(values[i] %in% rand)){
z[i] <- values[i]
}
}
z <- z[ z != 0 ]
print(rand)
print(z)
# Step 3:
z2 <- mean(z)
z1 <- mean(rand)
a <- z2-z1
meandiff[[i]]<- mean(z)
print(a)
# Step 4:
}
# Step 5:
print(meandiff)
}
perm_mean(2,c(1:10),4)
perm_mean <- function(perms, values, n1)
{
## step one
diffmean<- c(rep(0,perms))
zero <- c(rep(0,perms))
print(meandiff)
# Loop throught number of permutations
for (i in c(1:perms))
{
# Step 2:
z <- c(rep(0,length(values)))
# random genreation of numbers should be defined outside this function.
rand <- sample(values,n1)
for(i in seq_along(values)){
if(isFALSE(values[i] %in% rand)){
z[i] <- values[i]
}
}
z <- z[ z != 0 ]
print(rand)
print(z)
# Step 3:
z2 <- mean(z)
z1 <- mean(rand)
a <- z2-z1
meandiff[[i]]<- mean(z)
print(a)
# Step 4:
}
# Step 5:
print(meandiff)
}
perm_mean(2,c(1:10),4)
perm_mean <- function(perms, values, n1)
{
## step one
meandiff<- c(rep(0,perms))
zero <- c(rep(0,perms))
print(meandiff)
# Loop throught number of permutations
for (i in c(1:perms))
{
# Step 2:
z <- c(rep(0,length(values)))
# random genreation of numbers should be defined outside this function.
rand <- sample(values,n1)
for(i in seq_along(values)){
if(isFALSE(values[i] %in% rand)){
z[i] <- values[i]
}
}
z <- z[ z != 0 ]
print(rand)
print(z)
# Step 3:
z2 <- mean(z)
z1 <- mean(rand)
a <- z2-z1
meandiff[[i]]<- mean(z)
print(a)
# Step 4:
}
# Step 5:
print(meandiff)
}
perm_mean(2,c(1:10),4)
perm_mean <- function(perms, values, n1)
{
## step one
meandiff<- c(rep(0,perms))
zero <- c(rep(0,perms))
print(meandiff)
# Loop throught number of permutations
for (i in c(1:perms))
{
# Step 2:
z <- c(rep(0,length(values)))
# random genreation of numbers should be defined outside this function.
rand <- sample(values,n1)
for(i in seq_along(values)){
if(isFALSE(values[i] %in% rand)){
z[i] <- values[i]
}
}
z <- z[ z != 0 ]
print(rand)
print(z)
# Step 3:
z2 <- mean(z)
z1 <- mean(rand)
a <- z2-z1
meandiff[[i]]<- mean(z)
zero[i] <- meandiff[perms]
print(a)
# Step 4:
}
# Step 5:
print(meandiff)
}
perm_mean(2,c(1:10),4)
perm_mean <- function(perms, values, n1)
{
## step one
meandiff<- c(rep(0,perms))
zero <- c(rep(0,perms))
print(meandiff)
# Loop throught number of permutations
for (i in c(1:perms))
{
# Step 2:
z <- c(rep(0,length(values)))
# random genreation of numbers should be defined outside this function.
rand <- sample(values,n1)
for(i in seq_along(values)){
if(isFALSE(values[i] %in% rand)){
z[i] <- values[i]
}
}
z <- z[ z != 0 ]
print(rand)
print(z)
# Step 3:
z2 <- mean(z)
z1 <- mean(rand)
a <- z2-z1
meandiff[[i]]<- mean(z)
zero[i] <- meandiff[perms]
print(a)
# Step 4:
}
# Step 5:
print(zero)
}
perm_mean(2,c(1:10),4)
perm_mean <- function(perms, values, n1)
{
## step one
meandiff<- c(rep(0,perms))
zero <- c(rep(0,perms))
print(meandiff)
# Loop throught number of permutations
for (i in c(1:perms))
{
# Step 2:
z <- c(rep(0,length(values)))
# random genreation of numbers should be defined outside this function.
rand <- sample(values,n1)
for(i in seq_along(values)){
if(isFALSE(values[i] %in% rand)){
z[i] <- values[i]
}
}
z <- z[ z != 0 ]
print(rand)
print(z)
# Step 3:
z2 <- mean(z)
z1 <- mean(rand)
a <- z2-z1
meandiff[[i]]<- mean(a)
print(a)
# Step 4:
}
# Step 5:
print(zero)
}
perm_mean(2,c(1:10),4)
perm_mean <- function(perms, values, n1)
{
## step one
meandiff<- c(rep(0,perms))
zero <- c(rep(0,perms))
print(meandiff)
# Loop throught number of permutations
for (i in c(1:perms))
{
# Step 2:
z <- c(rep(0,length(values)))
# random genreation of numbers should be defined outside this function.
rand <- sample(values,n1)
for(i in seq_along(values)){
if(isFALSE(values[i] %in% rand)){
z[i] <- values[i]
}
}
z <- z[ z != 0 ]
print(rand)
print(z)
# Step 3:
z2 <- mean(z)
z1 <- mean(rand)
a <- z2-z1
meandiff[[i]]<- mean(a)
print(a)
# Step 4:
}
# Step 5:
print(meandiff)
}
perm_mean(2,c(1:10),4)
